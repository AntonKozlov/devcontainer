#!/usr/bin/env bash

err() {
	echo "$@" >&2
}

printhelp() {
	err "Usage: . $(basename $1) [OPTION]... IMG"
	err "Usage: . $(basename $1) -C [OPTION]... CONT"
	err "Start docker container with current dir mounted and user mirrored"
	err
	err "Options:"
	err "  -C                     create an alias for existing container instead of starting one"
	err "  -r ARG                 extra arg to be passed to 'docker run'"
	err "  -w WORKSPACE           workspace directory name inside of container [ CWD by default ]"
	err "  -e ARG                 extra arg to be passed to 'docker exec'"
	err "  -a NAME                alias name to quick getting into container [ \"dr\" by default ]"
}

if [ $BASH_SOURCE = $0 ]; then
	printhelp $0
	exit 1
fi


defalias() {
	local name=$1
	shift
	eval "$name() {
		docker exec -i $* sh -lc \"\$*\"
	}"
}

main() {
	local OPTIND=1
	local OPTARG
	local opt

	local workspace=/p
	local alias=dr
	local is_container=false

	local run_args=""
	local exec_args=""
	while getopts Cr:w:e:a: opt; do
		case $opt in
		C)
			is_container=true
			;;
		r)
			run_args="$run_args $OPTARG"
			;;
		w)
			local workspace="$OPTARG"
			;;
		e)
			exec_args="$exec_args $OPTARG"
			;;
		a)
			local alias="$OPTARG"
			;;
		esac
	done
	shift $((OPTIND - 1))
	local target="$1"

	if ! [ "$target" ]; then
		err "No image or container provided"
		err
		printhelp $BASH_SOURCE
		return 1
	fi

	if [ -t 0 ]; then
		exec_args=" $exec_args -t"
	fi

	if [ "$is_container" = true ]; then
		if [ "$run_args" != "" ]; then
			err "docker run arguments ignored with -C:$run_args"
		fi

		defalias $alias $exec_args -u user $target
		$alias true
		if [ $? != 0 ]; then
			err "Can not use container \"$target\""
			unset $alias
			return 1
		fi
		echo $target
	else
		local cont # don't eat exit code
		cont=$(docker run -d \
			$run_args \
			-e "WORKSPACE=$workspace" \
			-v "$PWD:$workspace" \
			--entrypoint /bin/sh \
			$target \
			-c 'while :; do sleep 3600; done')

		if [ $? != 0 ] && [ $cont ]; then
			docker rm $cont >/dev/null
			return 1
		fi

		docker cp $(dirname $BASH_SOURCE)/container/. $cont:/.
		docker exec $exec_args $cont /usr/local/sbin/init.sh

		defalias $alias $exec_args -u user $cont
		echo $cont
	fi

}

bootstrap() {
	main "$@"
	local retcode=$?

	unset err
	unset printhelp
	unset main
	unset bootstrap
	unset defalias

	return $retcode
}

bootstrap "$@"
